/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.fuzzilli.protobuf.FuzzerState', null, global);
goog.exportSymbol('proto.fuzzilli.protobuf.Identification', null, global);
goog.exportSymbol('proto.fuzzilli.protobuf.LogMessage', null, global);
goog.exportSymbol('proto.fuzzilli.protobuf.Statistics', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fuzzilli.protobuf.Identification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fuzzilli.protobuf.Identification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fuzzilli.protobuf.Identification.displayName = 'proto.fuzzilli.protobuf.Identification';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fuzzilli.protobuf.Identification.prototype.toObject = function(opt_includeInstance) {
  return proto.fuzzilli.protobuf.Identification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fuzzilli.protobuf.Identification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.Identification.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: msg.getUuid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fuzzilli.protobuf.Identification}
 */
proto.fuzzilli.protobuf.Identification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fuzzilli.protobuf.Identification;
  return proto.fuzzilli.protobuf.Identification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fuzzilli.protobuf.Identification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fuzzilli.protobuf.Identification}
 */
proto.fuzzilli.protobuf.Identification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fuzzilli.protobuf.Identification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fuzzilli.protobuf.Identification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fuzzilli.protobuf.Identification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.Identification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes uuid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.fuzzilli.protobuf.Identification.prototype.getUuid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes uuid = 1;
 * This is a type-conversion wrapper around `getUuid()`
 * @return {string}
 */
proto.fuzzilli.protobuf.Identification.prototype.getUuid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUuid()));
};


/**
 * optional bytes uuid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUuid()`
 * @return {!Uint8Array}
 */
proto.fuzzilli.protobuf.Identification.prototype.getUuid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUuid()));
};


/** @param {!(string|Uint8Array)} value */
proto.fuzzilli.protobuf.Identification.prototype.setUuid = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fuzzilli.protobuf.LogMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fuzzilli.protobuf.LogMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fuzzilli.protobuf.LogMessage.displayName = 'proto.fuzzilli.protobuf.LogMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fuzzilli.protobuf.LogMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.fuzzilli.protobuf.LogMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fuzzilli.protobuf.LogMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.LogMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    origin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    level: jspb.Message.getFieldWithDefault(msg, 2, 0),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fuzzilli.protobuf.LogMessage}
 */
proto.fuzzilli.protobuf.LogMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fuzzilli.protobuf.LogMessage;
  return proto.fuzzilli.protobuf.LogMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fuzzilli.protobuf.LogMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fuzzilli.protobuf.LogMessage}
 */
proto.fuzzilli.protobuf.LogMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fuzzilli.protobuf.LogMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fuzzilli.protobuf.LogMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fuzzilli.protobuf.LogMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.LogMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string origin = 1;
 * @return {string}
 */
proto.fuzzilli.protobuf.LogMessage.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.fuzzilli.protobuf.LogMessage.prototype.setOrigin = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 level = 2;
 * @return {number}
 */
proto.fuzzilli.protobuf.LogMessage.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.LogMessage.prototype.setLevel = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.fuzzilli.protobuf.LogMessage.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.fuzzilli.protobuf.LogMessage.prototype.setLabel = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.fuzzilli.protobuf.LogMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.fuzzilli.protobuf.LogMessage.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fuzzilli.protobuf.FuzzerState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fuzzilli.protobuf.FuzzerState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fuzzilli.protobuf.FuzzerState.displayName = 'proto.fuzzilli.protobuf.FuzzerState';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.toObject = function(opt_includeInstance) {
  return proto.fuzzilli.protobuf.FuzzerState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fuzzilli.protobuf.FuzzerState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.FuzzerState.toObject = function(includeInstance, msg) {
  var f, obj = {
    corpus: msg.getCorpus_asB64(),
    evaluatorstate: msg.getEvaluatorstate_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fuzzilli.protobuf.FuzzerState}
 */
proto.fuzzilli.protobuf.FuzzerState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fuzzilli.protobuf.FuzzerState;
  return proto.fuzzilli.protobuf.FuzzerState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fuzzilli.protobuf.FuzzerState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fuzzilli.protobuf.FuzzerState}
 */
proto.fuzzilli.protobuf.FuzzerState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCorpus(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEvaluatorstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fuzzilli.protobuf.FuzzerState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fuzzilli.protobuf.FuzzerState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.FuzzerState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorpus_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEvaluatorstate_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes corpus = 1;
 * @return {!(string|Uint8Array)}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.getCorpus = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes corpus = 1;
 * This is a type-conversion wrapper around `getCorpus()`
 * @return {string}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.getCorpus_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCorpus()));
};


/**
 * optional bytes corpus = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCorpus()`
 * @return {!Uint8Array}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.getCorpus_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCorpus()));
};


/** @param {!(string|Uint8Array)} value */
proto.fuzzilli.protobuf.FuzzerState.prototype.setCorpus = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes evaluatorState = 2;
 * @return {!(string|Uint8Array)}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.getEvaluatorstate = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes evaluatorState = 2;
 * This is a type-conversion wrapper around `getEvaluatorstate()`
 * @return {string}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.getEvaluatorstate_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEvaluatorstate()));
};


/**
 * optional bytes evaluatorState = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEvaluatorstate()`
 * @return {!Uint8Array}
 */
proto.fuzzilli.protobuf.FuzzerState.prototype.getEvaluatorstate_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEvaluatorstate()));
};


/** @param {!(string|Uint8Array)} value */
proto.fuzzilli.protobuf.FuzzerState.prototype.setEvaluatorstate = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fuzzilli.protobuf.Statistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fuzzilli.protobuf.Statistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fuzzilli.protobuf.Statistics.displayName = 'proto.fuzzilli.protobuf.Statistics';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fuzzilli.protobuf.Statistics.prototype.toObject = function(opt_includeInstance) {
  return proto.fuzzilli.protobuf.Statistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fuzzilli.protobuf.Statistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.Statistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalsamples: jspb.Message.getFieldWithDefault(msg, 1, 0),
    validsamples: jspb.Message.getFieldWithDefault(msg, 2, 0),
    interestingsamples: jspb.Message.getFieldWithDefault(msg, 3, 0),
    timedoutsamples: jspb.Message.getFieldWithDefault(msg, 4, 0),
    crashingsamples: jspb.Message.getFieldWithDefault(msg, 5, 0),
    totalexecs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    avgprogramsize: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    execspersecond: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    fuzzeroverhead: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    numworkers: jspb.Message.getFieldWithDefault(msg, 10, 0),
    coverage: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    interestingsampleswithtypes: jspb.Message.getFieldWithDefault(msg, 12, 0),
    typecollectiontimeouts: jspb.Message.getFieldWithDefault(msg, 13, 0),
    typecollectionfailures: jspb.Message.getFieldWithDefault(msg, 14, 0),
    typecollectionattempts: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fuzzilli.protobuf.Statistics}
 */
proto.fuzzilli.protobuf.Statistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fuzzilli.protobuf.Statistics;
  return proto.fuzzilli.protobuf.Statistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fuzzilli.protobuf.Statistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fuzzilli.protobuf.Statistics}
 */
proto.fuzzilli.protobuf.Statistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalsamples(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidsamples(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInterestingsamples(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimedoutsamples(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCrashingsamples(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalexecs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvgprogramsize(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExecspersecond(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFuzzeroverhead(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumworkers(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCoverage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInterestingsampleswithtypes(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTypecollectiontimeouts(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTypecollectionfailures(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTypecollectionattempts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fuzzilli.protobuf.Statistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fuzzilli.protobuf.Statistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fuzzilli.protobuf.Statistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fuzzilli.protobuf.Statistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalsamples();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getValidsamples();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getInterestingsamples();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTimedoutsamples();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getCrashingsamples();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTotalexecs();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getAvgprogramsize();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getExecspersecond();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getFuzzeroverhead();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getNumworkers();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getCoverage();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getInterestingsampleswithtypes();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getTypecollectiontimeouts();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getTypecollectionfailures();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getTypecollectionattempts();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
};


/**
 * optional uint64 totalSamples = 1;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getTotalsamples = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setTotalsamples = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 validSamples = 2;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getValidsamples = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setValidsamples = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 interestingSamples = 3;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getInterestingsamples = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setInterestingsamples = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 timedOutSamples = 4;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getTimedoutsamples = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setTimedoutsamples = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 crashingSamples = 5;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getCrashingsamples = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setCrashingsamples = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 totalExecs = 6;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getTotalexecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setTotalexecs = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double avgProgramSize = 7;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getAvgprogramsize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setAvgprogramsize = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double execsPerSecond = 8;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getExecspersecond = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setExecspersecond = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double fuzzerOverhead = 9;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getFuzzeroverhead = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setFuzzeroverhead = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional uint64 numWorkers = 10;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getNumworkers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setNumworkers = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional double coverage = 11;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getCoverage = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setCoverage = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional uint64 interestingSamplesWithTypes = 12;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getInterestingsampleswithtypes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setInterestingsampleswithtypes = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 typeCollectionTimeouts = 13;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getTypecollectiontimeouts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setTypecollectiontimeouts = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 typeCollectionFailures = 14;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getTypecollectionfailures = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setTypecollectionfailures = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint64 typeCollectionAttempts = 15;
 * @return {number}
 */
proto.fuzzilli.protobuf.Statistics.prototype.getTypecollectionattempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.fuzzilli.protobuf.Statistics.prototype.setTypecollectionattempts = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


goog.object.extend(exports, proto.fuzzilli.protobuf);
